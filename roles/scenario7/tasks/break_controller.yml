---
- name: Run some things on tripleo controller
  shell: |
    if grep -q "17\." /etc/rhosp-release; then
      router_uuid=$(podman exec ovn_cluster_north_db_server ovn-nbctl --no-leader find logical_router 'external_ids:"neutron:router_name"="scenario-{{ scenario }}-router"' | awk '/^_uuid/{ print $ 3}')
      podman exec ovn_cluster_north_db_server ovn-nbctl --no-leader lr-nat-add $router_uuid dnat_and_snat {{ floating_ip }} 192.168.1{{ scenario }}0.4
    elif grep -q "16\." /etc/rhosp-release; then
      ovn_connection_string=$(ovs-vsctl get open . external_ids:ovn-remote | sed 's/6642/6641/' | tr -d '"')
      router_uuid=$(podman exec ovn_controller ovn-nbctl --db=$ovn_connection_string find logical_router 'external_ids:"neutron:router_name"="scenario-{{ scenario }}-router"' | awk '/^_uuid/{ print $ 3}')
      podman exec ovn_controller ovn-nbctl --db=$ovn_connection_string lr-nat-add $router_uuid dnat_and_snat {{ floating_ip }} 192.168.1{{ scenario }}0.4
      lrp=$(podman exec ovn_controller ovn-nbctl --db=$ovn_connection_string lrp-list $router_uuid | awk '{ print $1 }')
      podman exec ovn_controller ovn-nbctl --db=$ovn_connection_string get logical_router_port $lrp mac | tr -d '"'
    fi
  become: true
  register: lrp_mac
  when: installer == 'tripleo'

- name: Run some things on the OVN NB POD
  block:
  - name: Get ovn container name
    ansible.builtin.shell: "{{ oc_bin }} -n {{ oc_namespace }} get pods -l service=ovsdbserver-nb --field-selector=status.phase==Running -o name | head -n 1"
    register: ovn_pods

  - name: Set ovn POD name
    ansible.builtin.set_fact:
      ovn_pod: "{{ ovn_pods.stdout }}"

  - name: Modify OVN database
    shell: |
      router_uuid=$({{ container_run_cmd }} {{ ovn_pod }} -- ovn-nbctl find logical_router 'external_ids:"neutron:router_name"="scenario-{{ scenario }}-router"' | awk '/^_uuid/{ print $ 3}')
      {{ container_run_cmd }} {{ ovn_pod }} -- ovn-nbctl lr-nat-add $router_uuid dnat_and_snat {{ floating_ip }} 192.168.1{{ scenario }}0.4
      lrp=$({{ container_run_cmd }} {{ ovn_pod }} ovn-nbctl lrp-list $router_uuid | awk '{ print $1 }')
      {{ container_run_cmd }} {{ ovn_pod }} ovn-nbctl get logical_router_port $lrp mac | tr -d '"'
    register: lrp_mac
  when: installer == 'podified'
