---
- name: "create scenario {{ scenario}} working directory"
  ansible.builtin.file:
    path: "{{ working_dir }}/.scenario{{ scenario }}"
    state: directory

- name: Ensure that required packages are installed
  become: true
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
    use: dnf
  with_items:
    - jq
    - openssh

- name: Upload scenario
  ansible.builtin.template:
    src: create_env.sh.j2
    dest: "{{ create_env_file }}"
    mode: '0755'

- name: Execute environment
  ansible.builtin.shell: "{{ create_env_file }}"
  register: floating_ip

- name: Delete environment file
  ansible.builtin.file:
    path: "{{ create_env_file }}"
    state: absent

- name: Fetch SSH key file
  ansible.builtin.fetch:
    src: "{{ ssh_key_file }}"
    dest: "{{ ssh_key_file }}"
    flat: yes

- name: Create message
  ansible.builtin.copy:
    dest: "{{ workshop_message_file }}"
    content: "Run the following command: \nssh -p {{ pf_tcp_port }} -i {{ ssh_key_file }} cirros@{{ floating_ip.stdout_lines[-1] }}\n"
  delegate_to: 127.0.0.1
