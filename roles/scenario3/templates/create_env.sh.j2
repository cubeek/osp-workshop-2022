#!/bin/bash

set -e

source {{ overcloudrc_file }}

if ! openstack image show cirros-0.5.2-x86_64 > /dev/null 2> /dev/null; then
    # Create Cirros image
    curl -L http://download.cirros-cloud.net/0.5.2/cirros-0.5.2-x86_64-disk.img > cirros-0.5.2-x86_64-disk.img
    openstack image create cirros-0.5.2-x86_64 --file cirros-0.5.2-x86_64-disk.img --disk-format qcow2 --container-format bare --public
fi

openstack network create scenario-3-network

openstack subnet create --network scenario-3-network scenario-3-subnet --subnet-range 192.168.203.0/24

openstack router create scenario-3-router

openstack router set --enable-snat --external-gateway {{ public_network }} scenario-3-router
openstack router add subnet scenario-3-router scenario-3-subnet

openstack flavor show m1.tiny > /dev/null 2> /dev/null || openstack flavor create m1.tiny --disk 1 --vcpus 1 --ram 64
openstack flavor show m1.medium > /dev/null 2> /dev/null || openstack flavor create m1.medium --disk 10 --vcpus 1 --ram 512

openstack security group create scenario-3-sg
openstack security group rule create --ingress --protocol icmp scenario-3-sg
openstack security group rule create --ingress --protocol tcp --dst-port 22 scenario-3-sg

openstack keypair create scenario-3-key > {{ ssh_key_file }}
chmod 0600 {{ ssh_key_file }}

openstack server create --flavor m1.tiny --image cirros-0.5.2-x86_64 --nic net-id=scenario-3-network --key-name scenario-3-key --security-group scenario-3-sg scenario-3-vm --wait
openstack server show scenario-1-vm | grep -q "status.*ACTIVE"

port_id=$(openstack port list --server scenario-1-vm -c ID -f value | head)
fip=$(openstack floating ip create --port $port_id {{ public_network }} | awk '/floating_ip_address/{ print $4 }')

echo "$fip"
